{"version":3,"sources":["components/TaskForm.jsx","libs/contextLib.js","components/Task.jsx","components/Column.jsx","views/Board.jsx","components/OAuth.jsx","views/Login.jsx","views/Profile.jsx","views/Home.jsx","components/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["type","taskProp","handleSubmit","useState","task","setTask","modalStyle","margin","width","height","position","top","window","innerHeight","left","innerWidth","padding","textAlign","Card","style","CardHeader","title","CardContent","FormControl","display","InputLabel","htmlFor","Input","value","Name","id","onChange","e","target","description","Button","onClick","AppContext","createContext","useAppContext","useContext","column","socket","open","setOpen","useDrag","item","fromColumn","drag","handleClose","emit","minWidth","ref","Typography","variant","component","Modal","onClose","TaskForm","deleteColumn","useDrop","accept","canDrop","_id","drop","to","from","tasks","map","Task","key","CardActions","size","name","board","setBoard","refreshBoard","axios","get","then","resp","data","catch","err","console","log","useEffect","response","on","DndProvider","backend","HTML5Backend","columns","Column","provider","popup","setPopup","auth","setAuth","user","setUser","close","startAuth","preventDefault","url","openPopup","username","providers","props","OAuth","AppBar","Toolbar","color","io","className","Provider","Navbar","Home","path","Login","Profile","Board","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"yVAGe,cAAmC,IAAjCA,EAAgC,EAAhCA,KAAKC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,aAAkB,EACtBC,mBAASF,GADa,mBACtCG,EADsC,KACjCC,EADiC,KAGvCC,EAAa,CACfC,OAAQ,OACRC,MAAO,IACPC,OAAQ,IACRC,SAAU,WACVC,IAAMC,OAAOC,YAAc,EAAK,IAChCC,KAAOF,OAAOG,WAAa,EAAK,IAChCC,QAAS,GACTC,UAAU,UAGd,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAOb,GACT,kBAACc,EAAA,EAAD,CAAYC,MAAK,UAAKrB,EAAL,WACjB,kBAACsB,EAAA,EAAD,KACQ,kBAACC,EAAA,EAAD,CAAaJ,MAAO,CAACK,QAAQ,QAAQjB,OAAO,GAAGU,UAAU,SACrD,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,YAApB,aACA,kBAACC,EAAA,EAAD,CAAOC,MAAOxB,EAAKyB,KAAMC,GAAG,WAAWC,SAAU,SAAAC,GAAC,OAAI3B,EAAQ,2BAAID,GAAL,kBAAW,OAAQ4B,EAAEC,OAAOL,aAE7F,kBAACL,EAAA,EAAD,CAAaJ,MAAO,CAACK,QAAQ,QAAQjB,OAAO,GAAGU,UAAU,SACrD,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,YAApB,oBACA,kBAACC,EAAA,EAAD,CAAOC,MAAOxB,EAAK8B,YAAaJ,GAAG,WAAWC,SAAU,SAAAC,GAAC,OAAI3B,EAAQ,2BAAID,GAAL,kBAAW,cAAe4B,EAAEC,OAAOL,cAUnH,kBAACO,EAAA,EAAD,CAAQC,QAAS,SAAAJ,GAAC,OAAI9B,EAAaE,KAAQJ,KCnC1CqC,EAAaC,wBAAc,MAC3BC,EAAgB,kBAAMC,qBAAWH,ICG/B,cAAqB,IAAnBjC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,OACZC,EAAUH,IAAVG,OADwB,EAERvC,oBAAS,GAFD,mBAExBwC,EAFwB,KAEnBC,EAFmB,OAGdC,YAAQ,CACrBC,KAAM,CACF9C,KAAM,OACNI,KAAMA,EACN2C,WAAYN,KAJXO,EAHsB,oBAWzBC,EAAc,SAAA7C,GAChBwC,GAAQ,GACRF,EAAOQ,KAAK,aAAa9C,IAG7B,OACI,6BACI,kBAACc,EAAA,EAAD,CAAMkB,QAAS,kBAAMQ,GAAQ,IAAOzB,MAAO,CAACZ,OAAO,OAAO4C,SAAS,KAAMC,IAAKJ,GAC1E,kBAAC1B,EAAA,EAAD,KACI,kBAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAC9BnD,EAAKyB,QAIlB,kBAAC2B,EAAA,EAAD,CAAOb,KAAMA,EAAMc,QAASR,GACxB,kBAACS,EAAD,CAAU1D,KAAK,SAASC,SAAUG,EAAMF,aAAc+C,O,SCzBvD,cAA6B,IAA3BR,EAA0B,EAA1BA,OAAQkB,EAAkB,EAAlBA,aACdjB,EAAUH,IAAVG,OADgC,EAEhBvC,oBAAS,GAFO,mBAEhCwC,EAFgC,KAE3BC,EAF2B,OAItBgB,YAAQ,CACrBC,OAAQ,OACRC,QAAS,qBAAEf,WAA2BgB,MAAQtB,EAAOsB,KACrDC,KAAM,YAAwB,IAAtB5D,EAAqB,EAArBA,KAAK2C,EAAgB,EAAhBA,WACTL,EAAOQ,KAAK,WAAW,CAAC9C,KAAKA,EAAK6D,GAAGxB,EAAOsB,IAAIG,KAAKnB,EAAWgB,SAJ/DC,EAJ8B,oBAYjCf,EAAc,SAAA7C,GAChBwC,GAAQ,GACRF,EAAOQ,KAAK,UAAU9C,IAG1B,OACI,6BACI,kBAACc,EAAA,EAAD,CAAMC,MAAO,CAACZ,OAAO,QAAS6C,IAAKY,GAC/B,kBAAC5C,EAAA,EAAD,CAAYC,MAAOoB,EAAOZ,OAC1B,kBAACP,EAAA,EAAD,KACKmB,EAAO0B,OAAS1B,EAAO0B,MAAMC,KAAI,SAAChE,GAAD,OAAU,kBAACiE,EAAD,CAAMC,IAAKlE,EAAK2D,IAAK3D,KAAMA,EAAMqC,OAAQA,QAEzF,kBAAC8B,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,CAAQhB,MAAO,CAACZ,OAAO,QAASiE,KAAK,QAAQpC,QAAS,kBAAMQ,GAAQ,KAApE,YACA,kBAACT,EAAA,EAAD,CAAQhB,MAAO,CAACZ,OAAO,QAASiE,KAAK,QAAQpC,QAASuB,GAAtD,mBAGR,kBAACH,EAAA,EAAD,CAAOb,KAAMA,EAAMc,QAASR,GACxB,kBAACS,EAAD,CAAU1D,KAAK,MAAMC,SAAU,CAACwE,KAAK,GAAGvC,YAAY,GAAGO,OAAOA,EAAOsB,KAAM7D,aAAc+C,O,kCC9B1F,cAAW,IAATnB,EAAQ,EAARA,GAAQ,EACI3B,qBADJ,mBACduE,EADc,KACRC,EADQ,KAEdjC,EAAUH,IAAVG,OAEDkC,EAAe,WACjBC,IAAMC,IAAN,2CAA8ChD,IAC7CiD,MAAK,SAAAC,GAAI,OAAIL,EAASK,EAAKC,SAC3BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAkB9B,OAZAG,qBAAU,WACNT,IAAMC,IAAN,2CAA8ChD,IAC7CiD,MAAK,SAAAQ,GACFZ,EAASY,EAASN,MAClBvC,EAAO8C,GAAG,aAAa,SAAAR,GAAI,OAAIJ,OAC/BlC,EAAO8C,GAAG,aAAa,SAAAR,GAAI,OAAIJ,OAC/BlC,EAAO8C,GAAG,YAAW,SAAAR,GAAI,OAAIJ,OAC7BlC,EAAO8C,GAAG,WAAW,SAAAR,GAAI,OAAIJ,OAC7BlC,EAAO8C,GAAG,cAAc,SAAAR,GAAI,OAAIJ,UACjCM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC9B,CAACrD,EAAGY,IAGF,kBAAC+C,EAAA,EAAD,CAAaC,QAASC,KAClB,qCACA,4BAAQvD,QAlBE,SAAAJ,GAAC,OAAIU,EAAOQ,KAAK,YAAY,CAACwB,MAAM5C,MAkB9C,cACA,yBAAKX,MAAO,CAACK,QAAQ,OAAOR,QAAQ,KAC/B0D,GAASA,EAAMkB,QAAQxB,KAAI,SAAC3B,GAAD,OAAY,kBAACoD,EAAD,CAAQvB,IAAK7B,EAAOsB,IAAKtB,OAAQA,EAAQkB,aAAc,kBAnBtF,SAAAlB,GAAM,OAAIC,EAAOQ,KAAK,YAAY,CAACpB,GAAGW,EAAOsB,MAmB+CJ,CAAalB,YClCnH,cAAwB,IAAtBC,EAAqB,EAArBA,OAAOoD,EAAc,EAAdA,SAAc,EACT3F,qBADS,mBAC3B4F,EAD2B,KACrBC,EADqB,OAEEzD,IAA7B0D,EAF2B,EAE3BA,KAAKC,EAFsB,EAEtBA,QAAQC,EAFc,EAEdA,KAAKC,EAFS,EAETA,QACzBd,qBAAU,WACN5C,EAAO8C,GAAGM,GAAS,SAAAd,GACfoB,EAAQpB,GACRkB,GAAQ,GACRd,QAAQC,IAAIL,QAElB,CAACc,EAASI,EAAQE,EAAQ1D,IAE5B4C,qBAAU,WACNa,GAAQJ,GAASA,EAAMM,UACzB,CAACF,EAAKJ,IAER,IAaMO,EAAY,SAAAtE,GACdA,EAAEuE,iBACFP,EAfc,WACd,IACMlF,EAAQF,OAAOG,WAAa,EAAMP,IAClCG,EAAOC,OAAOC,YAAc,EAAMJ,IAClC+F,EAAG,qCAAiCV,EAAjC,qBAAsDpD,EAAOZ,IAEtE,OAAOlB,OAAO+B,KAAK6D,EAAK,GAAjB,2IALK,IAKL,kCALgB,IAKhB,iBAGqB7F,EAHrB,kBAGkCG,IAMhC2F,KAGb,OACI,6BACMR,EAAiE,2BAAIE,EAAKO,UAAnE,4BAAQtE,QAAS,SAAAJ,GAAC,OAAIsE,EAAUtE,KAAK8D,KCnCpDa,EAAY,CAAC,UAAW,SAAU,WAAY,UAErC,WAAAC,GAAU,IAAD,EACOrE,IAApB0D,EADa,EACbA,KAAKE,EADQ,EACRA,KAAKzD,EADG,EACHA,OACjB,OACI,6BACKuD,EAAO,2BAAIE,EAAKO,UAAgBC,EAAUvC,KAAI,SAAA0B,GAAQ,OAAI,kBAACe,EAAD,CAAOf,SAAUA,EAAUxB,IAAKwB,EAAUpD,OAAQA,SCP1G,WAAAkE,GACX,OACI,6BACI,yCCHG,WAAAA,GACX,OACI,6BACI,sC,kBCAG,aAAO,IAAD,EAC0BrE,IAApC0D,EADU,EACVA,KAAKC,EADK,EACLA,QAAQC,EADH,EACGA,KAAKC,EADR,EACQA,QAAQ1D,EADhB,EACgBA,OAejC,OARA4C,qBAAU,WACR5C,EAAO8C,GAAG,UAAU,SAAAR,GAClBI,QAAQC,IAAR,qBAA0BL,IAC1BkB,GAAQ,GACRE,EAAQ,WAEV,CAACF,EAAQE,EAAQ1D,IAGf,kBAACoE,EAAA,EAAD,CAAQpG,SAAS,UACb,kBAACqG,EAAA,EAAD,KACI,kBAAC1D,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,IAAD,CAAMnC,MAAO,CAAC6F,MAAM,SAAU/C,GAAG,KAAjC,UAEF,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,IAAD,CAAMnC,MAAO,CAAC6F,MAAM,SAAU/C,GAAG,UAAjC,UAEF,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,IAAD,CAAMnC,MAAO,CAAC6F,MAAM,SAAU/C,GAAG,YAAjC,WACCgC,EACD,4BAAQ7D,QAzBP,SAAAJ,GACbA,EAAEuE,iBACF7D,EAAOQ,KAAK,SAASiD,KAuBT,UACA,kBAAC,IAAD,CAAMhF,MAAO,CAAC6F,MAAM,SAAU/C,GAAG,UAAjC,a,iBCxBZvB,G,OAASuE,IAAG,0BAEH,aAAO,IAAD,EACI9G,oBAAS,GADb,mBACZ8F,EADY,KACPC,EADO,OAEI/F,mBAAS,MAFb,mBAEZgG,EAFY,KAEPC,EAFO,KAGnB,OACE,yBAAKc,UAAU,OACb,kBAAC7E,EAAW8E,SAAZ,CAAqBvF,MAAO,CAACqE,OAAKC,UAAQC,OAAKC,UAAQ1D,WACrD,kBAAC0E,EAAD,MACA,kBAAC,IAAD,KACE,kBAACC,EAAD,CAAMC,KAAK,MACX,kBAACC,EAAD,CAAOD,KAAK,WACZ,kBAACE,EAAD,CAASF,KAAK,iBACd,kBAACG,EAAD,CAAOH,KAAK,mBCXFI,QACW,cAA7B9G,OAAO+G,SAASC,UAEe,UAA7BhH,OAAO+G,SAASC,UAEhBhH,OAAO+G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtD,MAAK,SAAAuD,GACJA,EAAaC,gBAEdrD,OAAM,SAAAsD,GACLpD,QAAQoD,MAAMA,EAAMC,a","file":"static/js/main.0a4581a1.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { Card, CardContent, Typography, FormControl, InputLabel, Input, TextField, Select, MenuItem, CardHeader, Button} from '@material-ui/core';\r\n\r\nexport default ({type,taskProp,handleSubmit}) => {\r\n    const [task,setTask] = useState(taskProp);\r\n\r\n    const modalStyle = {\r\n        margin: \"3rem\",\r\n        width: 400,\r\n        height: 400,\r\n        position: \"absolute\",\r\n        top: (window.innerHeight / 2) - 250,\r\n        left: (window.innerWidth / 2) - 200,\r\n        padding: 20,\r\n        textAlign:\"center\"\r\n    }\r\n\r\n    return (\r\n        <Card style={modalStyle}>\r\n            <CardHeader title={`${type} task`}/>\r\n            <CardContent>\r\n                    <FormControl style={{display:\"block\",margin:20,textAlign:\"left\"}}>\r\n                        <InputLabel htmlFor=\"taskName\">Task name</InputLabel>\r\n                        <Input value={task.Name} id=\"taskName\" onChange={e => setTask({...task,['Name']:e.target.value})}/>\r\n                    </FormControl>\r\n                    <FormControl style={{display:\"block\",margin:20,textAlign:\"left\"}}>\r\n                        <InputLabel htmlFor=\"taskDesc\">Task description</InputLabel>\r\n                        <Input value={task.description} id=\"taskDesc\" onChange={e => setTask({...task,['description']:e.target.value})}/>\r\n                    </FormControl>\r\n                {/* <FormControl style={{display:\"block\",margin:20,textAlign:\"left\"}}>\r\n                    <InputLabel id=\"taskPriority\">Task priority</InputLabel>\r\n                    <Select select label=\"taskPriority\" value={task.}>\r\n                        <MenuItem value={1}>{1}</MenuItem>\r\n                        <MenuItem value={2}>{2}</MenuItem>\r\n                    </Select>\r\n                </FormControl> */}\r\n            </CardContent>\r\n            <Button onClick={e => handleSubmit(task)}>{type}</Button>\r\n        </Card>\r\n    )\r\n}","import {useContext,createContext} from 'react';\r\n\r\nexport const AppContext = createContext(null);\r\nexport const useAppContext = () => useContext(AppContext);","import { Card, CardContent, Typography, Modal} from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport TaskForm from './TaskForm';\r\nimport {useAppContext} from '../libs/contextLib';\r\n\r\nexport default ({task, column}) => {\r\n    const {socket} = useAppContext();\r\n    const [open,setOpen] = useState(false);\r\n    const [, drag] = useDrag({\r\n        item: { \r\n            type: \"TASK\", \r\n            task: task,\r\n            fromColumn: column,\r\n        }\r\n    });\r\n\r\n    const handleClose = task => {\r\n        setOpen(false);\r\n        socket.emit('updateTask',task);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card onClick={() => setOpen(true)} style={{margin:\"1rem\",minWidth:200}} ref={drag}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                        {task.Name}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal open={open} onClose={handleClose}>\r\n                <TaskForm type=\"Update\" taskProp={task} handleSubmit={handleClose}/>\r\n            </Modal>\r\n        </div>\r\n        \r\n    )\r\n}","import { Card,CardContent,Button,CardActions, CardHeader, Modal } from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport Task from './Task';\r\nimport TaskForm from './TaskForm';\r\nimport { useDrop } from 'react-dnd';\r\nimport {useAppContext} from '../libs/contextLib';\r\n\r\nexport default ({column, deleteColumn}) => {\r\n    const {socket} = useAppContext();\r\n    const [open,setOpen] = useState(false);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: \"TASK\",\r\n        canDrop: ({fromColumn}) => fromColumn._id !== column._id,\r\n        drop: ({task,fromColumn}) => { \r\n            socket.emit('moveTask',{task:task,to:column._id,from:fromColumn._id});\r\n        }\r\n    });\r\n\r\n    const handleClose = task => {\r\n        setOpen(false);\r\n        socket.emit('addTask',task)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{margin:\"1rem\"}} ref={drop}>\r\n                <CardHeader title={column.Name}/>\r\n                <CardContent>\r\n                    {column.tasks && column.tasks.map((task) => <Task key={task._id} task={task} column={column}/>)}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button style={{margin:\"auto\"}} size=\"large\" onClick={() => setOpen(true)}>Add Task</Button>\r\n                    <Button style={{margin:\"auto\"}} size=\"large\" onClick={deleteColumn}>Delete Column</Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Modal open={open} onClose={handleClose}>\r\n                <TaskForm type=\"Add\" taskProp={{name:\"\",description:\"\",column:column._id}} handleSubmit={handleClose}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Column from '../components/Column';\r\nimport axios from 'axios';\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport {useAppContext} from '../libs/contextLib';\r\n\r\nexport default ({id}) => {\r\n    const [board,setBoard] = useState();\r\n    const {socket} = useAppContext();\r\n\r\n    const refreshBoard = () => {\r\n        axios.get(`http://localhost:8000/api/boards/${id}`)\r\n        .then(resp => setBoard(resp.data))\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n    const addColumn = e => socket.emit('addColumn',{board:id});\r\n    const deleteColumn = column => socket.emit('delColumn',{id:column._id});\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/boards/${id}`)\r\n        .then(response => {\r\n            setBoard(response.data);\r\n            socket.on('addColumn', resp => refreshBoard());\r\n            socket.on('delColumn', resp => refreshBoard());\r\n            socket.on('moveTask',resp => refreshBoard());\r\n            socket.on('addTask', resp => refreshBoard());\r\n            socket.on('updateTask', resp => refreshBoard());\r\n        }).catch(err => console.log(err));\r\n    },[id,socket]);\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <h1>Board</h1>\r\n            <button onClick={addColumn}>Add Column</button>\r\n            <div style={{display:\"flex\",padding:20}}>\r\n                {board && board.columns.map((column) => <Column key={column._id} column={column} deleteColumn={() => deleteColumn(column)}/>)}\r\n            </div>\r\n        </DndProvider>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {useAppContext} from '../libs/contextLib';\r\n\r\nexport default ({socket,provider}) => {\r\n    const [popup,setPopup] = useState();\r\n    const {auth,setAuth,user,setUser} = useAppContext();\r\n    useEffect(() => {\r\n        socket.on(provider,resp => {\r\n            setUser(resp);\r\n            setAuth(true);\r\n            console.log(resp);\r\n        });\r\n    },[provider,setAuth,setUser,socket]);\r\n\r\n    useEffect(() => {\r\n        user && popup && popup.close();\r\n    },[user,popup]);\r\n\r\n    const openPopup = () => {\r\n        const width=600,height=600;\r\n        const left = (window.innerWidth / 2) - (width / 2);\r\n        const top = (window.innerHeight / 2) - (height / 2);\r\n        const url = `http://localhost:8000/auth/${provider}?socketId=${socket.id}`;\r\n\r\n        return window.open(url, \"\", \r\n            `toolbar=no, location=no, directories=no, status=no, menubar=no, \r\n            scrollbars=no, resizable=no, copyhistory=no, width=${width}, \r\n            height=${height}, top=${top}, left=${left}`\r\n        );\r\n    }\r\n\r\n    const startAuth = e => {\r\n        e.preventDefault();\r\n        setPopup(openPopup());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!auth ? <button onClick={e => startAuth(e)}>{provider}</button> : <p>{user.username}</p>}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport OAuth from '../components/OAuth';\r\nimport {useAppContext} from '../libs/contextLib';\r\nconst providers = ['twitter', 'google', 'facebook', 'github'];\r\n\r\nexport default props => {\r\n    const {auth,user,socket} = useAppContext();\r\n    return (\r\n        <div>\r\n            {auth ? <p>{user.username}</p> : providers.map(provider => <OAuth provider={provider} key={provider} socket={socket}/>)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n        </div>\r\n    )\r\n}","import React,{useEffect} from 'react';\r\nimport {AppBar,Toolbar,Typography} from '@material-ui/core';\r\nimport {Link} from '@reach/router';\r\nimport {useAppContext} from '../libs/contextLib';\r\n\r\nexport default () => {\r\n    const {auth,setAuth,user,setUser,socket} = useAppContext();\r\n\r\n    const logout = e => {\r\n      e.preventDefault();\r\n      socket.emit('logout',user);\r\n    }\r\n\r\n    useEffect(() => {\r\n      socket.on(\"logout\", resp => {\r\n        console.log(`logged out ${resp}`)\r\n        setAuth(false);\r\n        setUser(null);\r\n      })\r\n    },[setAuth,setUser,socket]);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h4\" >\r\n                  <Link style={{color:\"white\"}} to=\"/\">Tazkr</Link>\r\n                </Typography>\r\n                <Typography variant=\"h4\">\r\n                  <Link style={{color:\"white\"}} to=\"/board\">Board</Link>\r\n                </Typography>\r\n                <Typography variant=\"h4\">\r\n                  <Link style={{color:\"white\"}} to=\"/profile\">Profile</Link>\r\n                  {auth ? \r\n                  <button onClick={logout}>Logout</button>:\r\n                  <Link style={{color:\"white\"}} to=\"/login\">Login</Link>\r\n                  }\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport {Router} from '@reach/router';\r\nimport Board from './views/Board';\r\nimport Login from './views/Login';\r\nimport Profile from './views/Profile';\r\nimport Home from './views/Home';\r\nimport Navbar from './components/Navbar';\r\nimport {AppContext} from './libs/contextLib';\r\nimport io from 'socket.io-client';\r\nimport './App.css';\r\nconst socket = io(\"http://localhost:8000\");\r\n\r\nexport default () => {\r\n  const [auth,setAuth] = useState(false);\r\n  const [user,setUser] = useState(null);\r\n  return (\r\n    <div className=\"App\">\r\n      <AppContext.Provider value={{auth,setAuth,user,setUser,socket}}>\r\n        <Navbar />\r\n        <Router>\r\n          <Home path=\"/\"/>\r\n          <Login path=\"/login\"/>\r\n          <Profile path=\"/profile/:id\"/>\r\n          <Board path=\"/board/:id\"/>\r\n        </Router>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}